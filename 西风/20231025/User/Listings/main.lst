C51 COMPILER V9.60.0.0   MAIN                                                              10/27/2023 22:36:17 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Driver) DEBUG OBJECTEXTEND PRI
                    -NT(.\Listings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          /* 头文件区 */
   2          #include <STC15F2K60S2.H>
   3          #include <INIT.H>
   4          #include <LED.H>
   5          #include <KEY.H>
   6          #include <SEG.H>
   7          
   8          /* 变量区 */
   9          unsigned char Key_Slow_Down, Seg_Slow_Down;  // 减速变量
  10          unsigned char Key_Val, Key_Old, Key_Down, Key_Up;  // 按键扫描专用变量
  11          unsigned char Seg_Pos; // 数码管扫描变量
  12          unsigned char Seg_Buf[8] = {10, 10, 10, 10, 10, 10, 10, 10};  // 数码管显示数组，默认全熄灭
  13          unsigned char Seg_Point[8] = {0, 0, 0, 0, 0, 0, 0, 0};  // // 数码管小数点显示数组，默认全熄灭
  14          
  15          /* 按键处理函数 */
  16          void Key_Proc() 
  17          {
  18   1        if (Key_Slow_Down) return;
  19   1        Key_Slow_Down = 1;
  20   1        
  21   1        Key_Val = Key_Read(0);  // 实时读取按键值
  22   1        Key_Down = Key_Val & (Key_Val ^ Key_Old);  // 读取下降沿
  23   1        Key_Up = ~Key_Val & (Key_Val ^ Key_Old);  // 读取上升沿
  24   1        Key_Old = Key_Val;  // 辅助变量
  25   1        
  26   1        if (Key_Down)
  27   1        {
  28   2          Seg_Buf[7] = Key_Down % 10;
  29   2          Seg_Buf[6] = (Key_Down / 10) % 10;
  30   2          Led_Disp(0, Key_Down % 2);
  31   2        }
  32   1      }
  33          
  34          /* 信息处理函数 */
  35          void Seg_Proc() 
  36          {
  37   1        if (Seg_Slow_Down) return;
  38   1        Seg_Slow_Down = 1;
  39   1        
  40   1        
  41   1      }
  42          
  43          /* 其他显示函数 */
  44          void Led_Proc() 
  45          {
  46   1        
  47   1      }
  48          
  49          /* 定时器0初始化函数 */
  50          void Timer0_Init()    //1毫秒@12.000MHz
  51          {
  52   1        AUXR &= 0x7F;     //定时器时钟12T模式
  53   1        TMOD &= 0xF0;     //设置定时器模式
  54   1        TL0 = 0x18;       //设置定时初始值
C51 COMPILER V9.60.0.0   MAIN                                                              10/27/2023 22:36:17 PAGE 2   

  55   1        TH0 = 0xFC;       //设置定时初始值
  56   1        TF0 = 0;        //清除TF0标志
  57   1        TR0 = 1;        //定时器0开始计时
  58   1        ET0 = 1;        //使能定时器0中断
  59   1        EA = 1;
  60   1      }
  61          
  62          
  63          /* 定时器0中断服务函数*/
  64          void Timer0_Isr() interrupt 1 
  65          {
  66   1        if ( ++ Key_Slow_Down == 10) Key_Slow_Down = 0;
  67   1        if ( ++ Seg_Slow_Down == 500) Key_Slow_Down = 0;
  68   1        if ( ++ Seg_Pos == 8) Seg_Pos = 0;
  69   1        Seg_Disp(Seg_Pos, Seg_Buf[Seg_Pos], Seg_Point[Seg_Pos]);
  70   1        
  71   1        
  72   1      }
  73          
  74          /* Main */
  75          void main() 
  76          {
  77   1        Sys_Init();
  78   1        Timer0_Init();
  79   1        while (1) 
  80   1        {
  81   2          Key_Proc();
  82   2          Seg_Proc();
  83   2          Led_Proc();
  84   2        }
  85   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    229    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     23    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
